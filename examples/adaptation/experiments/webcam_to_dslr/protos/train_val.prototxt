name: "Alexnet compact bilinear grl"
layer {
  name: "source_data"
  type: "ImageData"
  top: "source_data"
  top: "lp_labels"
  image_data_param {
    source: "./data/webcam_list.txt"
    batch_size: 64
    shuffle: true
    #label_dim: 1
    new_height: 256
    new_width: 256
  }
  transform_param {
    crop_size: 227
    mean_file: "./data/ilsvrc12/imagenet_mean.binaryproto"
    #mean_file: "./models/deep-residual-networks/ResNet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
} 
layer {
  name: "source_domain_labels"
  type: "DummyData"
  top: "source_domain_labels"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 0
    }
    num: 64
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_data"
  type: "ImageData"
  top: "target_data"
  top: "target_labels"
  image_data_param {
    source: "./data/dslr_list.txt"
    batch_size: 64
    shuffle: true
    #label_dim: 1
    new_height: 256
    new_width: 256
  }
  transform_param {
    crop_size: 227
    mean_file: "./data/ilsvrc12/imagenet_mean.binaryproto"
    #mean_file: "./models/deep-residual-networks/ResNet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_domain_labels"
  type: "DummyData"
  top: "target_domain_labels"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 1
    }
    num: 64
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_data"
  type: "ImageData"
  top: "data"
  top: "lp_labels"
  image_data_param {
    source: "./data/dslr_list.txt"
    batch_size: 1
    shuffle: true
    #label_dim: 1
    new_height: 256
    new_width: 256
  }
  transform_param {
    crop_size: 227
    mean_file: "./data/ilsvrc12/imagenet_mean.binaryproto"
    #mean_file: "./models/deep-residual-networks/ResNet_mean.binaryproto"
    mirror: true
  }
  include: { phase: TEST }
}

layer {
  name: "target_domain_labels"
  type: "DummyData"
  top: "dc_labels"
  dummy_data_param {
    data_filler {
      type: "constant"
      value: 1
    }
    num: 1
    channels: 1
    height: 1
    width: 1
  }
  include: { phase: TEST }
}

layer {
  name: "no_target_label"
  type: "Silence"
  bottom: "target_labels"
  include: { phase:TRAIN }
}
layer {
  name: "no_dc_label_in_test"
  type: "Silence"
  bottom: "dc_labels"
  include: { phase:TEST }
}

# ---------------------------------------------------------- Data concatenation
layer {
  name: "concat_data"
  type: "Concat"
  bottom: "source_data"
  bottom: "target_data"
  top: "data"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}
layer {
  name: "concat_domain_labels"
  type: "Concat"
  bottom: "source_domain_labels"
  bottom: "target_domain_labels"
  top: "dc_labels"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}

# ----------------------------------------------------------------------------
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
# ----------------------------------------------------------------------------
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
# ----------------------------------------------------------------------------
layer {
  name: "bottleneck"
  type: "InnerProduct"
  bottom: "fc7"
  top: "bottleneck"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 256
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "bottleneck_alias"
  type: "Split"
  bottom: "bottleneck"
  top: "source_features_fc7"
  include: { phase: TEST }
}

layer {
  name: "slice_features_fc7"
  type: "Slice"
  bottom: "bottleneck"
  top: "source_features_fc7"
  top: "target_features_fc7"
  slice_param {
    slice_dim: 0
  }
  include: { phase: TRAIN }
}

layer {
  name: "lp_fc8"
  type: "InnerProduct"
  bottom: "source_features_fc7"
  top: "source_features_fc8"
  param {
    name: "fc8_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "fc8_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "lp_accuracy"
  type: "Accuracy"
  bottom: "source_features_fc8"
  bottom: "lp_labels"
  top: "lp_accuracy"
  include: { phase: TEST }
}
layer {
  name: "lp_loss"
  type: "SoftmaxWithLoss"
  bottom: "source_features_fc8"
  bottom: "lp_labels"
  top: "lp_loss"
  include: { phase: TRAIN }
}

layer {
  name: "tar_fc8"
  type: "InnerProduct"
  bottom: "target_features_fc7"
  top: "target_features_fc8"
  param {
    name: "fc8_w"
    lr_mult: 10
    decay_mult: 1
  }
  param {
    name: "fc8_b"
    lr_mult: 20
    decay_mult: 0
  }
  inner_product_param {
    num_output: 31
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  include: { phase: TRAIN }
}

#layer {
#  name: "softmax_source"
#  type: "Softmax"
#  bottom: "source_features_fc8"
#  top: "source_features_fc8s"
#  include: { phase: TRAIN }
#}
#layer {
#  name: "softmax_target"
#  type: "Softmax"
#  bottom: "target_features_fc8"
#  top: "target_features_fc8s"
#  include: { phase: TRAIN }
#}
#layer {
#  name: "source_product1"
#  type: "OuterProduct"
#  bottom: "source_features_fc7"
#  bottom: "source_features_fc8"
#  top: "source_product"
#  include: { phase: TRAIN }
#}
#layer {
#  name: "target_product1"
#c type: "OuterProduct"
#  bottom: "target_features_fc7"
#  bottom: "target_features_fc8"
#  top: "target_product"
#  include: { phase: TRAIN }
#}
layer {
  name: "source_reshape_fc7"
  type: "Reshape"
  bottom: "source_features_fc7"
  top: "source_features_fc7s"
  reshape_param {
    shape: { 
      dim: 0
      dim: 0
      dim: 1
      dim: 1
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "source_reshape_fc8"
  type: "Reshape"
  bottom: "source_features_fc8"
  top: "source_features_fc8s"
  reshape_param {
    shape: { 
      dim: 0
      dim: 0
      dim: 1
      dim: 1
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_reshape_fc7"
  type: "Reshape"
  bottom: "target_features_fc7"
  top: "target_features_fc7s"
  reshape_param {
    shape: { 
      dim: 0
      dim: 0
      dim: 1
      dim: 1
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_reshape_fc8"
  type: "Reshape"
  bottom: "target_features_fc8"
  top: "target_features_fc8s"
  reshape_param {
    shape: { 
      dim: 0
      dim: 0
      dim: 1
      dim: 1
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "source_bilinear_layer"
  type: "CompactBilinear"
  bottom: "source_features_fc7s"
  bottom: "source_features_fc8s"
  top: "source_product"
  compact_bilinear_param {
    num_output: 256
    sum_pool: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "target_bilinear_layer"
  type: "CompactBilinear"
  bottom: "target_features_fc7s"
  bottom: "target_features_fc8s"
  top: "target_product"
  compact_bilinear_param {
    num_output: 256
    sum_pool: true
  }
  include: { phase: TRAIN }
}
layer {
  name: "concat product"
  type: "Concat"
  bottom: "source_product"
  bottom: "target_product"
  top: "all_product"
  concat_param {
    concat_dim: 0
  }
  include: { phase: TRAIN }
}
layer {
  name: "signed_sqrt_layer"
  type: "SignedSqrt"
  bottom: "all_product"
  top: "sqrt_product"
  include: { phase: TRAIN }
}
layer {
  name: "l2_norm_layer"
  type: "L2Normalize"
  bottom: "sqrt_product"
  top: "l2_product"
  include: { phase: TRAIN }
}
#layer {
  #name: "concat product"
  #type: "Concat"
  #bottom: "source_features_fc8s"
  #bottom: "target_features_fc8s"
  #top: "all_product"
  #concat_param {
    #concat_dim: 0
  #}
  #include: { phase: TRAIN }
#}
layer {
  name: "grl"
  type: "GradientScaler"
  bottom: "l2_product"
  top: "grl"
  gradient_scaler_param {
    lower_bound: 0.0
    upper_bound: 1.0
    alpha: 10.0
    max_iter: 10000
  }
  include: { phase: TRAIN }
}

# -----------------------------------------------------------------------------
# ----------------------------------------------------------- Domain classifier
# -----------------------------------------------------------------------------

#layer {
#  name: "product_conv1"
#  type: "Convolution"
#  bottom: "grl"
#  top: "product_conv"
#  param {
#    lr_mult: 10
#    decay_mult: 1
#  }
#  param {
#    lr_mult: 20
#    decay_mult: 0
#  }
#  convolution_param {
#    num_output: 64
#    kernel_h: 10
#    kernel_w: 1
#    stride: 1
#    weight_filler {
#      type: "gaussian"
#      std: 0.01
#    }
#    bias_filler {
#      type: "constant"
#      value: 0
#    }
#  }
#  include: { phase: TRAIN }
#}
#layer {
#  name: "product_relu"
#  type: "ReLU"
#  bottom: "product_conv"
#  top: "product_conv"
#  include: { phase: TRAIN }
#}
#layer {
#  name: "product_pool"
#  type: "Pooling"
#  bottom: "product_conv"
#  top: "product_pool"
#  pooling_param {
#    pool: AVE
#    kernel_h: 1
#    kernel_w: 31
#    stride: 1
#  }
#  include: { phase: TRAIN }
#}
#layer {
#  name: "product_drop"
#  type: "Dropout"
#  bottom: "product_pool"
#  top: "product_pool"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#  include: { phase: TRAIN }
#}
layer {
  name: "dc_ip1"
  type: "InnerProduct"
  bottom: "grl"
  top: "dc_ip1"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "dc_relu1"
  type: "ReLU"
  bottom: "dc_ip1"
  top: "dc_ip1"
  include: { phase: TRAIN }
}
layer {
  name: "dc_drop1"
  type: "Dropout"
  bottom: "dc_ip1"
  top: "dc_ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
  include: { phase: TRAIN }
}
## ----------------------------------------------------------------------------
layer {
  name: "dc_ip2"
  type: "InnerProduct"
  bottom: "dc_ip1"
  top: "dc_ip2"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "dc_relu2"
  type: "ReLU"
  bottom: "dc_ip2"
  top: "dc_ip2"
  include: { phase: TRAIN }
}
layer {
  name: "dc_drop2"
  type: "Dropout"
  bottom: "dc_ip2"
  top: "dc_ip2"
  dropout_param {
    dropout_ratio: 0.5
  }
  include: { phase: TRAIN }
}
# ----------------------------------------------------------------------------
layer {
  name: "dc_ip3"
  type: "InnerProduct"
  bottom: "dc_ip2"
  top: "dc_ip3"
  param {
    lr_mult: 10
  }
  param {
    lr_mult: 20
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "gaussian"
      std: 0.3
    }
    bias_filler {
      type: "constant"
    }
  }
  include: { phase: TRAIN }
}
layer {
  name: "dc_loss"
  type: "SigmoidCrossEntropyLoss"
  bottom: "dc_ip3"
  bottom: "dc_labels"
  top: "dc_loss"
  loss_weight: 1.0
  include: { phase: TRAIN }
}
